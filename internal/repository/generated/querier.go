// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package generated

import (
	"context"
)

type Querier interface {
	DeleteFlashcardSoft(ctx context.Context, id int32) error
	InsertAntonyms(ctx context.Context, arg InsertAntonymsParams) error
	InsertCollection(ctx context.Context, arg InsertCollectionParams) (int32, error)
	InsertFlashcard(ctx context.Context, arg InsertFlashcardParams) (int32, error)
	InsertMeanings(ctx context.Context, arg InsertMeaningsParams) error
	InsertSynonyms(ctx context.Context, arg InsertSynonymsParams) error
	InsertUser(ctx context.Context, arg InsertUserParams) (int32, error)
	SelectAntonyms(ctx context.Context, collectionID int32) ([]SelectAntonymsRow, error)
	SelectAntonymsByCard(ctx context.Context, flashcardID int32) ([]SelectAntonymsByCardRow, error)
	SelectCollection(ctx context.Context, id int32) (SelectCollectionRow, error)
	SelectCollections(ctx context.Context, userID int32) ([]SelectCollectionsRow, error)
	SelectFlashcard(ctx context.Context, id int32) (SelectFlashcardRow, error)
	SelectFlashcards(ctx context.Context, arg SelectFlashcardsParams) ([]SelectFlashcardsRow, error)
	SelectFlashcardsTotal(ctx context.Context, collectionID int32) (int64, error)
	SelectMeanings(ctx context.Context, collectionID int32) ([]SelectMeaningsRow, error)
	SelectMeaningsByCard(ctx context.Context, flashcardID int32) ([]SelectMeaningsByCardRow, error)
	SelectSynonyms(ctx context.Context, collectionID int32) ([]SelectSynonymsRow, error)
	SelectSynonymsByCard(ctx context.Context, flashcardID int32) ([]SelectSynonymsByCardRow, error)
	UpdateFlashcardStatus(ctx context.Context, arg UpdateFlashcardStatusParams) error
}

var _ Querier = (*Queries)(nil)
