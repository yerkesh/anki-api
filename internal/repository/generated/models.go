// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package generated

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Antonym struct {
	ID           int32  `db:"id" json:"id"`
	FlashcardID  int32  `db:"flashcard_id" json:"flashcard_id"`
	CollectionID int32  `db:"collection_id" json:"collection_id"`
	Word         string `db:"word" json:"word"`
	Translated   string `db:"translated" json:"translated"`
}

type Collection struct {
	ID               int32              `db:"id" json:"id"`
	UserID           int32              `db:"user_id" json:"user_id"`
	Name             string             `db:"name" json:"name"`
	NativeLanguage   string             `db:"native_language" json:"native_language"`
	LearningLanguage string             `db:"learning_language" json:"learning_language"`
	CreatedAt        pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt        pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type Flashcard struct {
	ID             int32              `db:"id" json:"id"`
	CollectionID   int32              `db:"collection_id" json:"collection_id"`
	Frontside      string             `db:"frontside" json:"frontside"`
	ReviewStatus   string             `db:"review_status" json:"review_status"`
	Description    string             `db:"description" json:"description"`
	Translated     string             `db:"translated" json:"translated"`
	PartOfSpeech   string             `db:"part_of_speech" json:"part_of_speech"`
	PluralNoun     string             `db:"plural_noun" json:"plural_noun"`
	SingularNoun   string             `db:"singular_noun" json:"singular_noun"`
	BaseVerb       string             `db:"base_verb" json:"base_verb"`
	PastVerb       string             `db:"past_verb" json:"past_verb"`
	ParticipleVerb string             `db:"participle_verb" json:"participle_verb"`
	CreatedAt      pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	RepeatedAt     pgtype.Timestamptz `db:"repeated_at" json:"repeated_at"`
	IsDeleted      pgtype.Bool        `db:"is_deleted" json:"is_deleted"`
}

type Meaning struct {
	ID           int32  `db:"id" json:"id"`
	FlashcardID  int32  `db:"flashcard_id" json:"flashcard_id"`
	CollectionID int32  `db:"collection_id" json:"collection_id"`
	Meaning      string `db:"meaning" json:"meaning"`
	Example      string `db:"example" json:"example"`
}

type Synonym struct {
	ID           int32  `db:"id" json:"id"`
	FlashcardID  int32  `db:"flashcard_id" json:"flashcard_id"`
	CollectionID int32  `db:"collection_id" json:"collection_id"`
	Word         string `db:"word" json:"word"`
	Translated   string `db:"translated" json:"translated"`
}

type User struct {
	ID        int32              `db:"id" json:"id"`
	Email     string             `db:"email" json:"email"`
	Username  string             `db:"username" json:"username"`
	Role      string             `db:"role" json:"role"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}
